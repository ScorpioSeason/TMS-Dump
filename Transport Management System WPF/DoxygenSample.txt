
/* CLASS / FILE HEADER COMMENT: =================================================================================
*
*  \file		Shape.h
*  \ingroup		PROG 1385 - Assign 04: Shapes
*  \date		November 20, 2019
*  \author		8000 Cigarettes
*  \brief		This file contains library inclusions, global constants, and the Shape class definition.	  
*  \see			Files that this depends on		-- http://doxygen.nl/manual/commands.html#cmdref															  */
/**\class		Shape
*  \brief		Class brief description.
*  \details		This base class represents a simple shape, its attributes, and its functions. The shape has a 
*				name, a colour, and (virtual) perimeter, area, and overall dimension. The functions of the
*				shape involve creation, deletion, access, and manipulation of a shape; its colour and name. 
*
* =========================================================================================================== */


// COP-OUT METHOD HEADER COMMENT -------------------------------------------------------------------------------
/**
*	\fn			int Square()
*	\brief		To create a new Square by validating or else defaulting new values
*	\details	THis is if you have more to say about what the function does and don't want to inline comment
*	\param[in]	char[]	newColour		An incoming value meant to become the square's colour
*	\param[out]	char[]	newSideLength	An incoming value meant to become the square's side length
*	\exception	This is if we have some big ol try catches?
*	\see		CallsMade()
*	\return		None
*
* ---------------------------------------------------------------------------------------------------- */



/// This is a doxygen compatible inline comment. 
// This is not doxygen compatible



// SEAN'S METHOD HEADER DOXYGEN ============================================================================
	
	/* NOTE : The DOxygen formatting below falls inline with JAVADOC style commenting - so exposure to 
	          this style of commenting wouldn't be a bad thing ... */
	/**
	* \brief To instantiate a new DOG object - given a set of attribute values
	* \details <b>Details</b>
	*
	* Here is where I can provide a better, more detailed description of what this method does...
	* \param newName  - <b>char *</b> - representation of the dog's name
	* \param newBreed - <b>char *</b> - representation of the dog's breed
	* \param newGender - <b>int</b> - representation of the dog's gender (see <i>Static Public Attributes</i>)
	* \param newSize - <b>int</b> - representation of the dog's stature (size) (see <i>Static Public Attributes</i>)
	* \param newDIN - <b>int</b> - specifies this dog's unique <i>dog identification number</i>
	* 
	* \return As this is a <i>constructor</i> for the Dog class, nothing is returned
	*
	* \see ~Dog()
	*/

// SEAN's MAINPAGE DOXYGEN =================================================================================

	/// \mainpage Dog Project   
	/// \note I can include an image anywhere I want in my DOxygen comments by simply using the "\image" command
	/// \image html SimpleDog.jpg
	///
	///
	/// \section intro Program Introduction
	/// The <b>TestDog</b> application is meant to show how <i>constructors</i> and
	/// <i>destructors</i> are used and/or called within an OO application.  As well, 
	/// this program is one of the first OO applications that OOP students have seen 
	/// (in terms of the source code) so it also serves as a example of <i>programming style</i> and 
	/// <i>DOxygen commenting style</i>) 
	///
	///
	/// Major DOxygen features to note are:
	/// 
	/// - the Project / Application description and documentation found in the <b>Main Page</b> 
	/// - how <b>classes</b> are commented using DOxygen
	/// - how <b>methods</b> are commented using DOxygen
	/// - the fact that you can still comment your source code (in C or C++ style) and have DOxygen ignore those comments while constructing your Project documentation
	///
	///
	/// That list of major DOxygen features (this time in a numbered list) are:
	/// -# the Project / Application description and documentation found in the <b>Main Page</b> 
	/// -# how <b>classes</b> are commented using DOxygen
	/// -# how <b>methods</b> are commented using DOxygen
	/// -# the fact that you can still comment your source code (in C or C++ style) and have DOxygen ignore those comments while constructing your Project documentation
	///
	///
	/// If your project and/or documentation requires a link to some external link - you can easily include those in your DOxygen 
	/// comments like this :
	/// - <A target=blank HREF="http://www.kwhumane.com/"> The K-W Humane Society</A>
	///
	///
	/// If using the code in this package as an example - please modify the comments
	/// as appropriate for your own specific code.
	///
	/// <hr>
	/// \section notes Special Release Notes
	/// If you are tracking the versioning of your project software (as you would in the real world) then this is a good place to
	/// indicate (on a per version basis):
	/// - features added to the software
	/// - incidents / bugs / issues fixed
	/// - etc.
	///
	/// <hr>
	/// \section sampleTextFile Configuration File
	/// I can include the contents of TEXT files <i>as is</i> directly into the DOxygen comments
	/// \verbinclude DogProject.cfg
	///
	/// <hr>
	/// \section requirements Project Requirements
	/// I can include the contents of an HTML version of the <i>Requirements Document</i> directly into the DOxygen comments - in BLOCKQUOTE style
	/// <blockquote>
	/// \htmlinclude DogRequirements.htm
	/// </blockquote>
	///
	/// If you also want to include some (or all) of the Project's requirements in your DOxygen documentation - you could use this space to do so.
	///
	/// <i>Please Note : The requirement(s) summary doesn't have to be an SRS by any means ...
	/// <hr> 
	/// \todo [optionally include text about more work to be done]
	/// \todo Give each todo item its own line
	///
	/// <hr>
	/// \bug [optionally include known bugs and limitations within the project here]
	/// - BUG   : This is known bug #1
	/// - BUG   : This is known bug #2
	/// - ISSUE : Here is an known issue / limitation with the project
	/// 
	/// <hr>
	/// \section version Current version of the Dog Project :
	/// <ul>
	/// <li>\authors   The <b><i>Dog Expert</i></b> Team !!</li>
	/// <li>\version   1.00.00</li>
	/// <li>\date      2007-2015</li>
	/// <li>\pre       In order to use the <i>Dog Project</i> - you must first start with a puppy</li>
	/// <li>\warning   Improper use of the <i>Dog Project</i> may result in getting <b>bitten</b></li>
	/// <li>\copyright Dog-Expert Team</li>
	/// </ul>
	///